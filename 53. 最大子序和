/***************************************************************************/
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:

输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。

/***************************************************************************/

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int res = INT_MIN;
        int len = nums.size();
        int sum = 0;
        int left = 0;
        int right = 0;
        for(int i = 0; i < len; i++){
            
            sum += nums[i];
            if(res<sum){
                res=sum;
                right=i;
            }
            //如果sum < 0，重新开始找子序串
            if(sum < 0){
                sum = 0;
                left = i+1;
            }
        }
        //cout<<left<<right<<endl;//子串的区间。
        return res;

    }
};
