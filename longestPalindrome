/********************************************************************/
给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。


示例 2：

输入: "cbbd"
输出: "bb"


/********************************************************************/

class Solution {
public:
    string longestPalindrome(string s) {
        if(s.length()<1){
            return"";
        }
        int start =0, end=0;
        for(int i = 0;i<s.length();i++){
            int len1=expandAroundCenter(s,i,i);//单元素中心查找
            int len2=expandAroundCenter(s,i,i+1);//双元素中心查找
            int maxlen=max(len1,len2);
            if(maxlen>end-start){
                start=i-(maxlen-1)/2;
                end=i+maxlen/2;
            }
        }
        return s.substr(start,end-start+1);
    }

    int expandAroundCenter(string s, int left, int right){
        
        while(left>=0 && right<s.length() && s[left]==s[right])
        {
            left--;
            right++;
        }
        return right-left-1;
    }

	int expandAroundCenter1(string s, int left, int right)
	{
		int L = left, R = right;
		while (L >= 0 && R < s.length() && s[L] == s[R])
		{// 计算以left和right为中心的回文串长度
			L--;
			R++;
		}
		return R - L - 1;
	}
};
